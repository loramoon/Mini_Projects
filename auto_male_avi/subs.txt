This is an interface demonstration of a price index transfer from an MSSQL Database to ETRM System Previse Coral. 
Automated data import is achieved with the standalone Enterprise Middleware called Universal Loader.
How does it work? In our MSSQL Database, we have price index data stored in a table. 
Our aim is to retrieve the records for the last 10 days and send them to Previse Coral.
Initially in Previse Coral we already have 5 records for this price index.
For this demonstration the workflow will be started manually, but it could be scheduled for automated execution as well. 
Selection of the data which we want to retrieve is a part of the MSSQL-Database-Reader-Configuration. 
In a SQL query, we define details like the database table, columns, and different filters. 
The result will be converted into a JSON file.
Let's start our workflow. 
Once the workflow is executed and the initial data set is retrieved, 
a set of transformation Rules modifies the data 
to the format and data set expected by the ETRM System. 
How does the transformation work?
This is the Universal Loader screen where the transformation Rules are set. 
On the left-hand side, we have an example of the initial data set from the Database. 
The Rules are in the middle section. 
We can see the transformation result by clicking the Test Transformation button.
We can check one transformation Rule as an example. 
This specific price index name is switched to another name that matches the same price index in Previse Coral. 
The last step in our workflow is the Writer step where we specify the correct endpoint where our price index is expected.
Now, if we refresh the initial Previse Coral page where we had 5 records stored, we will find the 10 new ones which we just added.
Thank you for watching our demonstration!